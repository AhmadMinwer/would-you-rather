{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\QuestionPage.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nfunction QuestionPage(props) {\n  var id = props.id,\n      questions = props.questions;\n  var question = questions[id];\n\n  if (question == null) {\n    return React.createElement(Redirect, {\n      from: \"*\",\n      to: \"/not-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Question\"), question && React.createElement(Question, {\n    question: question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n}\n\nfunction mapStateToProps(_ref, props) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions;\n  var id = props.match.params.id;\n  return {\n    id: id,\n    questions: questions\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\QuestionPage.js"],"names":["React","Redirect","connect","Question","QuestionPage","props","id","questions","question","mapStateToProps","authedUser","match","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,MACnBC,EADmB,GACDD,KADC,CACnBC,EADmB;AAAA,MACfC,SADe,GACDF,KADC,CACfE,SADe;AAE3B,MAAMC,QAAQ,GAAGD,SAAS,CAACD,EAAD,CAA1B;;AAEA,MAAGE,QAAQ,IAAI,IAAf,EAAqB;AACnB,WAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,GAAf;AAAmB,MAAA,EAAE,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGA,QAAQ,IACP,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF;AAQD;;AAED,SAASC,eAAT,OAAoDJ,KAApD,EAA2D;AAAA,MAAhCK,UAAgC,QAAhCA,UAAgC;AAAA,MAApBH,SAAoB,QAApBA,SAAoB;AAAA,MACjDD,EADiD,GAC1CD,KAAK,CAACM,KAAN,CAAYC,MAD8B,CACjDN,EADiD;AAGzD,SAAO;AACLA,IAAAA,EAAE,EAAFA,EADK;AAELC,IAAAA,SAAS,EAATA;AAFK,GAAP;AAID;;AAED,eAAeL,OAAO,CAACO,eAAD,CAAP,CAAyBL,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Question from './Question';\r\n\r\nfunction QuestionPage(props) {\r\n  const { id, questions } = props;\r\n  const question = questions[id];\r\n\r\n  if(question == null) {\r\n    return <Redirect from='*' to='/not-found' />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='center'>Question</h3>\r\n      {question &&\r\n        <Question question={question} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }, props) {\r\n  const { id } = props.match.params;\r\n  \r\n  return {\r\n    id,\r\n    questions,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage);\r\n"]},"metadata":{},"sourceType":"module"}