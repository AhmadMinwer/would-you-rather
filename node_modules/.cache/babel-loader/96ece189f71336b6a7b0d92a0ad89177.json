{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      questionsToShow: questionsToShow\n    };\n\n    _this.handleFilterClicked = function (answered) {\n      this.setState(function () {\n        var _this2 = this;\n\n        return {\n          questionsToShow: this.props.questions.filter(function (question) {\n            return question.optionOne.votes.includes(_this2.props.authedUser);\n          })\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          authedUser = _this$props.authedUser,\n          questionsIds = _this$props.questionsIds;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Your Timeline\"), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"answerd questions\"), React.createElement(\"button\", {\n        onClick: function onClick(event) {\n          return _this3.handleFilterClicked(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"unanswerd questions\")), React.createElement(\"ul\", {\n        className: \"dashboard-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, questionsIds.map(function (id) {\n        return React.createElement(\"li\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Question, {\n          id: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  return {\n    questionsIds: Object.keys(questions),\n    authedUser: authedUser,\n    users: users\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","state","questionsToShow","handleFilterClicked","answered","setState","props","questions","filter","question","optionOne","votes","includes","authedUser","questionsIds","console","log","event","map","id","mapStateToProps","users","Object","keys"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,eAAe,EAAfA;AADI,K;;UAGVC,mB,GAAsB,UAASC,QAAT,EAAmB;AACvC,WAAKC,QAAL,CAAc,YAAW;AAAA;;AACvB,eAAO;AACLH,UAAAA,eAAe,EAAE,KAAKI,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4B,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,QAAzB,CAAkC,MAAI,CAACN,KAAL,CAAWO,UAA7C,CAAJ;AAAA,WAApC;AADZ,SAAP;AAGD,OAJD;AAKD,K;;;;;;;6BAEU;AAAA;;AAAA,wBACgC,KAAKP,KADrC;AAAA,UACGO,UADH,eACGA,UADH;AAAA,UACeC,YADf,eACeA,YADf;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAII;AACC,QAAA,OAAO,EAAE,iBAACW,KAAD;AAAA,iBAAW,MAAI,CAACd,mBAAL,CAAyB,KAAzB,CAAX;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJJ,CAFJ,EAYI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKW,YAAY,CAACI,GAAb,CAAiB,UAACC,EAAD;AAAA,eACd;AAAI,UAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAEA,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADc;AAAA,OAAjB,CADL,CAZJ,CADJ;AAsBH;;;;EAtCmBtB,S;;AAyCxB,SAASuB,eAAT,OAA2D;AAAA,MAAhCP,UAAgC,QAAhCA,UAAgC;AAAA,MAApBN,SAAoB,QAApBA,SAAoB;AAAA,MAATc,KAAS,QAATA,KAAS;AACvD,SAAO;AACHP,IAAAA,YAAY,EAAEQ,MAAM,CAACC,IAAP,CAAYhB,SAAZ,CADX;AAEHM,IAAAA,UAAU,EAAVA,UAFG;AAGHQ,IAAAA,KAAK,EAALA;AAHG,GAAP;AAKH;;AAED,eAAevB,OAAO,CAACsB,eAAD,CAAP,CAAyBpB,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Question from './Question'\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        questionsToShow,\r\n    }\r\n  handleFilterClicked = function(answered) {\r\n    this.setState(function() {\r\n      return {\r\n        questionsToShow: this.props.questions.filter(question => question.optionOne.votes.includes(this.props.authedUser))\r\n      };\r\n    });\r\n  }\r\n\r\n    render() {\r\n        const { authedUser, questionsIds } = this.props;\r\n        console.log(this.props)\r\n\r\n        return (\r\n            <div>\r\n                <h3 className='center'>Your Timeline</h3>\r\n                <div className='center'>\r\n                    <button>\r\n                        answerd questions\r\n                    </button>\r\n                    <button\r\n                     onClick={(event) => this.handleFilterClicked(false)}>\r\n                        unanswerd questions\r\n                    </button>\r\n                </div>\r\n                \r\n                <ul className='dashboard-list'>\r\n                    {questionsIds.map((id) => (\r\n                        <li key={id}>\r\n                            <Question id={id} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }) {\r\n    return {\r\n        questionsIds: Object.keys(questions),\r\n        authedUser,\r\n        users,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}