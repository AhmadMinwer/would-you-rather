{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { formatQuestion } from '../utils/_DATA';\n\nvar QuestionPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionPage, _Component);\n\n  function QuestionPage() {\n    _classCallCheck(this, QuestionPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuestionPage).apply(this, arguments));\n  }\n\n  _createClass(QuestionPage, [{\n    key: \"render\",\n    value: function render() {\n      var questions = this.props.questions;\n      var id = this.props.match.params['id'];\n      var question = questions[id];\n      var users = this.props.users;\n      return React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png',\n        alt: \"Avatar of \".concat(users[question.author].name),\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, users[question.author].name)), React.createElement(\"span\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Would You Rather...\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"asnwerOption\",\n        value: \"optionOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, question.optionOne.text), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"asnwerOption\",\n        value: \"optionTwo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"contactChoice2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, question.optionTwo.text), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit my answer\",\n        className: \"btn center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return QuestionPage;\n}(Component);\n\nfunction mapStateToProps(_ref, props) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  var id = props.match.params['id'];\n  var question = questions[id];\n  question['optionOneText'] = question.optionOne.text;\n  question['optionTwoText'] = question.optionTwo.text;\n  return {\n    users: users,\n    questions: questions,\n    authedUser: authedUser,\n    question: question ? formatQuestion(question) : null\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\QuestionPage.js"],"names":["React","Component","Redirect","connect","formatQuestion","QuestionPage","questions","props","id","match","params","question","users","author","avatarURL","name","optionOne","text","optionTwo","mapStateToProps","authedUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { formatQuestion } from '../utils/_DATA'\r\n\r\n\r\n\r\n\r\nclass QuestionPage extends Component {\r\n    render() {\r\n        const { questions } = this.props;\r\n\r\n        const id = this.props.match.params['id']\r\n        const question = questions[id]\r\n        \r\n\r\n        const users = this.props.users\r\n \r\n\r\n\r\n\r\n        return (\r\n            <div className=\"question\">\r\n                <img\r\n                    src={users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png'}\r\n                    alt={`Avatar of ${users[question.author].name}`}\r\n                    className='avatar'\r\n                />\r\n                <div className='question-info'>\r\n                    <div>\r\n                        <span>{users[question.author].name}</span>\r\n                    </div>\r\n                    <span className='center'>Would You Rather...</span>\r\n                    <form>\r\n                        <div>\r\n                            <input type=\"radio\"\r\n                                name=\"asnwerOption\" value=\"optionOne\" />\r\n                            <label>{question.optionOne.text}</label><br />\r\n                            <input type=\"radio\"\r\n                                name=\"asnwerOption\" value=\"optionTwo\" />\r\n                            <label for=\"contactChoice2\">{question.optionTwo.text}</label><br />\r\n                        </div>\r\n                        <input type='submit' value='submit my answer' className='btn center' />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n   \r\n    const id = props.match.params['id']\r\n    const question = questions[id]\r\n    question['optionOneText'] = question.optionOne.text\r\n    question['optionTwoText'] = question.optionTwo.text\r\n\r\n\r\n    return {\r\n        users,\r\n        questions,\r\n        authedUser,\r\n        question: question\r\n        ? formatQuestion(question)\r\n        : null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage);\r\n"]},"metadata":{},"sourceType":"module"}