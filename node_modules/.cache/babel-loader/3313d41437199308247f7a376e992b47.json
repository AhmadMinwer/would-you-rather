{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\Question.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/questions';\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Question)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleOptionClicked = function (option) {\n      console.log(this.props);\n      var _this$props = this.props,\n          answerQuestion = _this$props.answerQuestion,\n          authedUser = _this$props.authedUser,\n          question = _this$props.question;\n      var answer = option === 1 ? 'optionOne' : 'optionTwo';\n      answerQuestion(authedUser, question.id, answer);\n    };\n\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          authedUser = _this$props2.authedUser,\n          question = _this$props2.question,\n          users = _this$props2.users;\n      var answers = Object.keys(users[authedUser].answers);\n      var answered = answers.indexOf(question.id) > -1 ? true : false;\n      var votesOptionOne = question.optionOne.votes.length;\n      var votesOptionTwo = question.optionTwo.votes.length;\n      var votesTotal = votesOptionOne + votesOptionTwo;\n      var percentVotesOptionOne = (votesOptionOne / votesTotal).toFixed(2) * 100;\n      var percentVotesOptionTwo = (votesOptionTwo / votesTotal).toFixed(2) * 100;\n      return React.createElement(Link, {\n        to: \"/questions/\".concat(question.id),\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/\".concat(users[question.author].avatarURL),\n        alt: \"Avatar of \".concat(question.author),\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Would You Rather...\"), React.createElement(\"div\", {\n        className: \"option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: question.optionOne.votes.indexOf(authedUser) > -1 ? 'question-option-selected' : answered ? 'answered' : '',\n        onClick: function onClick(event) {\n          return _this2.handleOptionClicked(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, question.optionOne.text), answered && React.createElement(\"span\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Votes: \", question.optionOne.votes.length, \" (\", percentVotesOptionOne, \"%)\")), React.createElement(\"div\", {\n        className: \"option opt-offset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: question.optionTwo.votes.indexOf(authedUser) > -1 ? 'question-option-two question-option-selected' : answered ? 'question-option-two answered' : 'question-option-two',\n        onClick: function onClick(event) {\n          return _this2.handleOptionClicked(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, question.optionTwo.text), answered && React.createElement(\"span\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Votes: \", question.optionTwo.votes.length, \" (\", percentVotesOptionTwo, \"%)\")));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var authedUser = _ref.authedUser,\n      users = _ref.users;\n  console.log(actions);\n  return {\n    authedUser: authedUser,\n    users: users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Question);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\Question.js"],"names":["React","Component","Link","connect","actions","Question","handleOptionClicked","option","console","log","props","answerQuestion","authedUser","question","answer","id","users","answers","Object","keys","answered","indexOf","votesOptionOne","optionOne","votes","length","votesOptionTwo","optionTwo","votesTotal","percentVotesOptionOne","toFixed","percentVotesOptionTwo","author","avatarURL","event","text","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/questions';\r\n\r\nclass Question extends Component {\r\n  handleOptionClicked = function(option) {\r\n    console.log(this.props)\r\n    const { answerQuestion, authedUser, question } = this.props;\r\n    const answer = option === 1 ? 'optionOne' : 'optionTwo';\r\n    answerQuestion(authedUser, question.id, answer);\r\n  }\r\n\r\n  render() {\r\n    const { authedUser, question, users } = this.props;\r\n    const answers = Object.keys(users[authedUser].answers);\r\n    const answered = answers.indexOf(question.id) > -1 ? true : false;\r\n    const votesOptionOne = question.optionOne.votes.length;\r\n    const votesOptionTwo = question.optionTwo.votes.length;\r\n    const votesTotal = votesOptionOne + votesOptionTwo;\r\n    const percentVotesOptionOne = (votesOptionOne / votesTotal).toFixed(2) * 100;\r\n    const percentVotesOptionTwo = (votesOptionTwo / votesTotal).toFixed(2) * 100;\r\n\r\n    return (\r\n      <Link to={`/questions/${question.id}`} className='question'>\r\n        <img\r\n          src={`/${users[question.author].avatarURL}`}\r\n          alt={`Avatar of ${question.author}`}\r\n          className='avatar'\r\n        />\r\n        <span>Would You Rather...</span>\r\n        <div className='option'>\r\n          <button\r\n            className={\r\n              question.optionOne.votes.indexOf(authedUser) > -1\r\n              ? 'question-option-selected'\r\n              : answered\r\n                ? 'answered'\r\n                : ''\r\n            }\r\n            onClick={(event) => this.handleOptionClicked(1)}\r\n          >\r\n            {question.optionOne.text}\r\n          </button>\r\n          {answered && <span className='stats'>\r\n            Votes: {question.optionOne.votes.length} ({percentVotesOptionOne}%)\r\n          </span>}\r\n        </div>\r\n        <div className='option opt-offset'>\r\n          <button\r\n            className={\r\n              question.optionTwo.votes.indexOf(authedUser) > -1\r\n              ? 'question-option-two question-option-selected'\r\n              : answered\r\n                ? 'question-option-two answered'\r\n                : 'question-option-two'\r\n            }\r\n            onClick={(event) => this.handleOptionClicked(2)}\r\n          >\r\n            {question.optionTwo.text}\r\n          </button>\r\n          {answered && <span className='stats'>\r\n            Votes: {question.optionTwo.votes.length} ({percentVotesOptionTwo}%)\r\n          </span>}\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, users }) {\r\n  console.log(actions)\r\n  return {\r\n    authedUser,\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Question);\r\n"]},"metadata":{},"sourceType":"module"}