{"ast":null,"code":"import { saveQuestionAnswer, saveQuestion } from './utils/api';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nexport var RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport var ANSWER_QUESTION = 'ANSWER_QUESTION';\nexport var ADD_QUESTION = 'ADD_QUESTION';\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question: question\n  };\n}\n\nexport function handleAddQuestion(optionOne, optionTwo) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        authedUser = _getState.authedUser;\n\n    dispatch(showLoading());\n    return saveQuestion({\n      author: authedUser,\n      optionOneText: optionOne,\n      optionTwoText: optionTwo\n    }).then(function (question) {\n      return dispatch(addQuestion(question));\n    }).then(function () {\n      return dispatch(hideLoading());\n    });\n  };\n}\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions: questions\n  };\n}\nexport function answerQuestion(_ref) {\n  var id = _ref.id,\n      authedUser = _ref.authedUser,\n      answer = _ref.answer;\n  return {\n    type: ANSWER_QUESTION,\n    id: id,\n    authedUser: authedUser,\n    answer: answer\n  };\n}\nexport function handleAnswerQuestion(info) {\n  return function (dispatch) {\n    dispatch(answerQuestion(info));\n    return saveQuestionAnswer(info).catch(function (e) {\n      console.warn('Error in handleAnswerQuestion: ', e);\n      dispatch(answerQuestion(info));\n      alert('The was an error answering the qustion. Try again.');\n    });\n  };\n}","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\actions\\questions.js"],"names":["saveQuestionAnswer","saveQuestion","showLoading","hideLoading","RECEIVE_QUESTIONS","ANSWER_QUESTION","ADD_QUESTION","addQuestion","question","type","handleAddQuestion","optionOne","optionTwo","dispatch","getState","authedUser","author","optionOneText","optionTwoText","then","receiveQuestions","questions","answerQuestion","id","answer","handleAnswerQuestion","info","catch","e","console","warn","alert"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,YAA7B,QAAiD,aAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AAEA,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;;AAEP,SAASC,WAAT,CAAsBC,QAAtB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEH,YADD;AAELE,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,OAAO,SAASE,iBAAT,CAA4BC,SAA5B,EAAuCC,SAAvC,EAAkD;AACvD,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBACNA,QAAQ,EADF;AAAA,QACrBC,UADqB,aACrBA,UADqB;;AAG7BF,IAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAR;AAEA,WAAOD,YAAY,CAAC;AACnBe,MAAAA,MAAM,EAAED,UADW;AAEnBE,MAAAA,aAAa,EAACN,SAFK;AAGnBO,MAAAA,aAAa,EAACN;AAHK,KAAD,CAAZ,CAKJO,IALI,CAKC,UAACX,QAAD;AAAA,aAAcK,QAAQ,CAACN,WAAW,CAACC,QAAD,CAAZ,CAAtB;AAAA,KALD,EAMJW,IANI,CAMC;AAAA,aAAMN,QAAQ,CAACV,WAAW,EAAZ,CAAd;AAAA,KAND,CAAP;AAOD,GAZD;AAaD;AAGD,OAAO,SAASiB,gBAAT,CAA2BC,SAA3B,EAAsC;AAC3C,SAAO;AACLZ,IAAAA,IAAI,EAAEL,iBADD;AAELiB,IAAAA,SAAS,EAATA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,cAAT,OAAqD;AAAA,MAA1BC,EAA0B,QAA1BA,EAA0B;AAAA,MAAtBR,UAAsB,QAAtBA,UAAsB;AAAA,MAAVS,MAAU,QAAVA,MAAU;AAC1D,SAAO;AACLf,IAAAA,IAAI,EAAEJ,eADD;AAELkB,IAAAA,EAAE,EAAFA,EAFK;AAGLR,IAAAA,UAAU,EAAVA,UAHK;AAILS,IAAAA,MAAM,EAANA;AAJK,GAAP;AAMD;AAED,OAAO,SAASC,oBAAT,CAA+BC,IAA/B,EAAqC;AAC1C,SAAO,UAACb,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACS,cAAc,CAACI,IAAD,CAAf,CAAR;AAEA,WAAO1B,kBAAkB,CAAC0B,IAAD,CAAlB,CACJC,KADI,CACE,UAACC,CAAD,EAAO;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb,EAAgDF,CAAhD;AACAf,MAAAA,QAAQ,CAACS,cAAc,CAACI,IAAD,CAAf,CAAR;AACAK,MAAAA,KAAK,CAAC,oDAAD,CAAL;AACD,KALI,CAAP;AAMD,GATD;AAUD","sourcesContent":["import { saveQuestionAnswer, saveQuestion } from './utils/api'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\nexport const ADD_QUESTION = 'ADD_QUESTION'\n\nfunction addQuestion (question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  }\n}\n\nexport function handleAddQuestion (optionOne, optionTwo) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState()\n\n    dispatch(showLoading())\n\n    return saveQuestion({\n     author: authedUser,\n     optionOneText:optionOne,\n     optionTwoText:optionTwo\n    })\n      .then((question) => dispatch(addQuestion(question)))\n      .then(() => dispatch(hideLoading()))\n  }\n}\n\n\nexport function receiveQuestions (questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  }\n}\n\nexport function answerQuestion ({ id, authedUser, answer }) {\n  return {\n    type: ANSWER_QUESTION,\n    id,\n    authedUser,\n    answer\n  }\n}\n\nexport function handleAnswerQuestion (info) {\n  return (dispatch) => {\n    dispatch(answerQuestion(info))\n\n    return saveQuestionAnswer(info)\n      .catch((e) => {\n        console.warn('Error in handleAnswerQuestion: ', e)\n        dispatch(answerQuestion(info))\n        alert('The was an error answering the qustion. Try again.')\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}