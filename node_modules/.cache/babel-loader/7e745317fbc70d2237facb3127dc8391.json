{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { formatQuestion } from '../utils/_DATA';\n\nvar QuestionPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionPage, _Component);\n\n  function QuestionPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuestionPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuestionPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.isAnswered = function () {\n      var _this$props = this.props,\n          authedUser = _this$props.authedUser,\n          questions = _this$props.questions,\n          users = _this$props.users;\n      var authedUserObject = users[authedUser];\n      var id = this.props.match.params['id'];\n      var question = questions[id];\n      console.log('users', authedUserObject);\n      console.log(Object.keys(authedUserObject.answers).filter(function (id) {\n        return id !== question.id;\n      }));\n      console.log('questionID', question.id);\n      return Object.keys(authedUserObject.answers).filter(function (id) {\n        return id === question.id;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(QuestionPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          questions = _this$props2.questions,\n          question = _this$props2.question,\n          users = _this$props2.users; // const id = this.props.match.params['id']\n      // const question = questions[id]\n      // const users = this.props.users\n\n      return React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png',\n        alt: \"Avatar of \".concat(users[question.author].name),\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, users[question.author].name)), React.createElement(\"span\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Would You Rather...\"), console.log('isAnswered', this.isAnswered()), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"asnwerOption\",\n        value: \"optionOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, question.optionOne.text), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"asnwerOption\",\n        value: \"optionTwo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"contactChoice2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, question.optionTwo.text), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit my answer\",\n        className: \"btn center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return QuestionPage;\n}(Component);\n\nfunction mapStateToProps(_ref, props) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  var id = props.match.params['id'];\n  console.log('match.params', id);\n  var question = questions[id];\n  question['optionOneText'] = question.optionOne.text;\n  question['optionTwoText'] = question.optionTwo.text;\n  authedUser = 'johndoe';\n  return {\n    users: users,\n    questions: questions,\n    authedUser: authedUser,\n    question: question ? formatQuestion(question) : null\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\QuestionPage.js"],"names":["React","Component","Redirect","connect","formatQuestion","QuestionPage","isAnswered","props","authedUser","questions","users","authedUserObject","id","match","params","question","console","log","Object","keys","answers","filter","author","avatarURL","name","optionOne","text","optionTwo","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { formatQuestion } from '../utils/_DATA'\r\n\r\n\r\n\r\n\r\nclass QuestionPage extends Component {\r\n\r\n    isAnswered = function(){\r\n        const {authedUser,questions , users} = this.props\r\n        const authedUserObject = users[authedUser]\r\n        const id = this.props.match.params['id']\r\n        const question = questions[id]\r\n\r\n        console.log('users',authedUserObject)\r\n        console.log(Object.keys(authedUserObject.answers).filter(id => id !== question.id))\r\n        console.log('questionID',question.id)\r\n        return Object.keys(authedUserObject.answers).filter(id => id === question.id)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { questions ,question , users } = this.props;\r\n        // const id = this.props.match.params['id']\r\n        // const question = questions[id]\r\n        // const users = this.props.users\r\n \r\n\r\n\r\n\r\n        return (\r\n            <div className=\"question\">\r\n                <img\r\n                    src={users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png'}\r\n                    alt={`Avatar of ${users[question.author].name}`}\r\n                    className='avatar'\r\n                />\r\n                <div className='question-info'>\r\n                    <div>\r\n                        <span>{users[question.author].name}</span>\r\n                    </div>\r\n                    <span className='center'>Would You Rather...</span>\r\n                     {console.log('isAnswered',this.isAnswered())}\r\n                    <form>\r\n                        <div>\r\n                            <input type=\"radio\"\r\n                                name=\"asnwerOption\" value=\"optionOne\" />\r\n                            <label>{question.optionOne.text}</label><br />\r\n                            <input type=\"radio\"\r\n                                name=\"asnwerOption\" value=\"optionTwo\" />\r\n                            <label for=\"contactChoice2\">{question.optionTwo.text}</label><br />\r\n                        </div>\r\n                        <input type='submit' value='submit my answer' className='btn center' />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n   \r\n    const id = props.match.params['id']\r\n    console.log('match.params',id)\r\n    const question = questions[id]\r\n    question['optionOneText'] = question.optionOne.text\r\n    question['optionTwoText'] = question.optionTwo.text\r\n    authedUser = 'johndoe'\r\n\r\n\r\n    return {\r\n        users,\r\n        questions,\r\n        authedUser,\r\n        question: question\r\n        ? formatQuestion(question)\r\n        : null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage);\r\n"]},"metadata":{},"sourceType":"module"}