{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { formatQuestion } from '../utils/_DATA';\n\nvar QuestionPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionPage, _Component);\n\n  function QuestionPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuestionPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuestionPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.isAnswered = function () {\n      var _this$props = this.props,\n          authedUser = _this$props.authedUser,\n          questions = _this$props.questions,\n          question = _this$props.question,\n          users = _this$props.users;\n      var questionId = this.props.id;\n      var authedUserObject = users[authedUser]; // const id = this.props.match.params['id']\n      // const question = questions[id]\n\n      console.log('users', authedUserObject);\n      console.log(Object.keys(authedUserObject.answers).filter(function (id) {\n        return id !== questionId;\n      }));\n      console.log('questionID from isAnswered', questionId);\n      return Object.keys(authedUserObject.answers).filter(function (id) {\n        return id === questionId;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(QuestionPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          questions = _this$props2.questions,\n          question = _this$props2.question,\n          users = _this$props2.users; // const id = this.props.match.params['id']\n      // const question = questions[id]\n      // const users = this.props.users\n\n      console.log('questionId from render', question.id);\n      return React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png',\n        alt: \"Avatar of \".concat(users[question.author].name),\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, users[question.author].name)), React.createElement(\"span\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Would You Rather...\"), this.isAnswered().length <= 0 ? React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"asnwerOption\",\n        value: \"optionOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, question.optionOne.text), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"asnwerOption\",\n        value: \"optionTwo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"contactChoice2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, question.optionTwo.text), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit my answer\",\n        className: \"btn center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, question.optionOne.text), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, question.optionTwo.text))));\n    }\n  }]);\n\n  return QuestionPage;\n}(Component);\n\nfunction mapStateToProps(_ref, props) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  var id = props.match.params['id'];\n  console.log('match.params', id);\n  var question = questions[id];\n  question['optionOneText'] = question.optionOne.text;\n  question['optionTwoText'] = question.optionTwo.text;\n  authedUser = 'johndoe';\n  return {\n    id: id,\n    users: users,\n    questions: questions,\n    authedUser: authedUser,\n    question: question ? formatQuestion(question) : null\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\QuestionPage.js"],"names":["React","Component","Redirect","connect","formatQuestion","QuestionPage","isAnswered","props","authedUser","questions","question","users","questionId","id","authedUserObject","console","log","Object","keys","answers","filter","author","avatarURL","name","length","optionOne","text","optionTwo","mapStateToProps","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { formatQuestion } from '../utils/_DATA'\r\n\r\n\r\n\r\n\r\nclass QuestionPage extends Component {\r\n\r\n    isAnswered = function () {\r\n        const { authedUser, questions, question, users } = this.props\r\n        const questionId = this.props.id\r\n        const authedUserObject = users[authedUser]\r\n        // const id = this.props.match.params['id']\r\n        // const question = questions[id]\r\n\r\n        console.log('users', authedUserObject)\r\n        console.log(Object.keys(authedUserObject.answers).filter(id => id !== questionId))\r\n        console.log('questionID from isAnswered', questionId)\r\n        return Object.keys(authedUserObject.answers).filter(id => id === questionId)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { questions, question, users } = this.props;\r\n        // const id = this.props.match.params['id']\r\n        // const question = questions[id]\r\n        // const users = this.props.users\r\n\r\n        console.log('questionId from render', question.id)\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"question\">\r\n                <img\r\n                    src={users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png'}\r\n                    alt={`Avatar of ${users[question.author].name}`}\r\n                    className='avatar'\r\n                />\r\n                <div className='question-info'>\r\n                    <div>\r\n                        <span>{users[question.author].name}</span>\r\n                    </div>\r\n                    <span className='center'>Would You Rather...</span>\r\n                    {this.isAnswered().length <= 0 ?\r\n                        <form>\r\n                            <div>\r\n                                <input type=\"radio\"\r\n                                    name=\"asnwerOption\" value=\"optionOne\" />\r\n                                <label>{question.optionOne.text}</label><br />\r\n                                <input type=\"radio\"\r\n                                    name=\"asnwerOption\" value=\"optionTwo\" />\r\n                                <label for=\"contactChoice2\">{question.optionTwo.text}</label><br />\r\n                            </div>\r\n                            <input type='submit' value='submit my answer' className='btn center' />\r\n                        </form>\r\n                        : <div>\r\n                               <p>{question.optionOne.text}</p><br/>\r\n                               <p>{question.optionTwo.text}</p>                         \r\n                        </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n\r\n    const id = props.match.params['id']\r\n    console.log('match.params', id)\r\n    const question = questions[id]\r\n    question['optionOneText'] = question.optionOne.text\r\n    question['optionTwoText'] = question.optionTwo.text\r\n    authedUser = 'johndoe'\r\n\r\n\r\n    return {\r\n        id,\r\n        users,\r\n        questions,\r\n        authedUser,\r\n        question: question\r\n            ? formatQuestion(question)\r\n            : null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage);\r\n"]},"metadata":{},"sourceType":"module"}