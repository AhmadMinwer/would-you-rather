{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showAnswered: false\n    };\n\n    _this.handleFilterClicked = function (answered) {\n      this.setState(function () {\n        return {\n          showAnswered: answered\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var showAnswered = this.state.showAnswered;\n      var _this$props = this.props,\n          authedUser = _this$props.authedUser,\n          questions = _this$props.questions;\n      var questionsArray = Object.keys(questions).map(function (key) {\n        return questions[key];\n      });\n      var filteredQuestions = questionsArray.filter(function (question) {\n        var contains = question.optionOne.votes.indexOf(authedUser) > -1 || question.optionTwo.votes.indexOf(authedUser) > -1;\n        return showAnswered ? contains : !contains;\n      });\n      var sortedQuestions = filteredQuestions.sort(function (a, b) {\n        return b.timestamp - a.timestamp;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Dashboard\"), React.createElement(\"div\", {\n        className: \"btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: !showAnswered ? 'btn-lft active' : 'btn-lft',\n        onClick: function onClick(event) {\n          return _this2.handleFilterClicked(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Unanswered\"), React.createElement(\"button\", {\n        className: showAnswered ? 'btn-rght active' : 'btn-rght',\n        onClick: function onClick(event) {\n          return _this2.handleFilterClicked(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Answered\")), React.createElement(\"ul\", {\n        className: \"question-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, sortedQuestions.map(function (question) {\n        return React.createElement(\"li\", {\n          key: question.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Question, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  return {\n    authedUser: authedUser,\n    questions: questions,\n    users: users\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","state","showAnswered","handleFilterClicked","answered","setState","props","authedUser","questions","questionsArray","Object","keys","map","key","filteredQuestions","filter","question","contains","optionOne","votes","indexOf","optionTwo","sortedQuestions","sort","a","b","timestamp","event","id","mapStateToProps","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nclass Dashboard extends Component {\n  state = {\n    showAnswered: false,\n  }\n\n  handleFilterClicked = function(answered) {\n    this.setState(function() {\n      return {\n        showAnswered: answered\n      };\n    });\n  }\n\n  render() {\n    const { showAnswered } = this.state;\n    const { authedUser, questions } = this.props;\n    const questionsArray = Object.keys(questions).map((key) => questions[key]);\n    const filteredQuestions = questionsArray.filter(function(question) {\n      const contains = (\n        question.optionOne.votes.indexOf(authedUser) > -1 ||\n        question.optionTwo.votes.indexOf(authedUser) > -1\n      );\n      return showAnswered ? contains : !contains;\n    });\n    const sortedQuestions = filteredQuestions.sort((a, b) => b.timestamp - a.timestamp);\n\n    return (\n      <div>\n        <h3 className='center'>Dashboard</h3>\n        <div className='btn-group'>\n          <button\n            className={!showAnswered ? 'btn-lft active' : 'btn-lft'}\n            onClick={(event) => this.handleFilterClicked(false)}\n          >\n            Unanswered\n          </button>\n          <button\n            className={showAnswered ? 'btn-rght active' : 'btn-rght'}\n            onClick={(event) => this.handleFilterClicked(true)}\n          >\n            Answered\n          </button>\n        </div>\n        <ul className='question-list'>\n          {sortedQuestions.map((question) => (\n            <li key={question.id}>\n              <Question question={question} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, questions, users }) {\n  return {\n    authedUser,\n    questions,\n    users,\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}