{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleAnswerdClicked = function () {\n      var questions = this.props.questions;\n      this.setState(function () {\n        var _this2 = this;\n\n        return {\n          questionsToShow: this.props.questionsIds.filter(function (id) {\n            return questions[id].optionOne.votes.includes(_this2.props.authedUser) || questions[id].optionTwo.votes.includes(_this2.props.authedUser);\n          })\n        };\n      });\n      console.log('authedUser', this.props.authedUser);\n      console.log('questionsToShow', this.state.questionsToShow);\n    };\n\n    _this.handleUnanswerdClicked = function () {\n      var questions = this.props.questions;\n      this.setState(function () {\n        var _this3 = this;\n\n        return {\n          questionsToShow: this.props.questionsIds.filter(function (id) {\n            return !_this3.state.questionsToShow.includes(id);\n          })\n        };\n      });\n      console.log('authedUser', this.props.authedUser);\n      console.log('questionsToShow', this.state.questionsToShow);\n    };\n\n    console.log('questions', questions);\n    _this.state = {\n      questionsToShow: _this.props.questionsIds.filter(function (id) {\n        return _this.props.questions[id].optionOne.votes.includes(_this.props.authedUser) || _this.props.questions[id].optionTwo.votes.includes(_this.props.authedUser);\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('questionsToShow', this.state.questionsToShow);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          authedUser = _this$props.authedUser,\n          questionsIds = _this$props.questionsIds;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Your Timeline\"), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(event) {\n          return _this4.handleUnanswerdClicked(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Unanswerd questions\"), React.createElement(\"button\", {\n        onClick: function onClick(event) {\n          return _this4.handleAnswerdClicked(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Answerd questions\")), React.createElement(\"ul\", {\n        className: \"dashboard-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.questionsToShow.map(function (id) {\n        return React.createElement(\"li\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Question, {\n          id: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  return {\n    questionsIds: Object.keys(questions),\n    questions: questions,\n    authedUser: 'johndoe',\n    users: users\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","props","handleAnswerdClicked","questions","setState","questionsToShow","questionsIds","filter","id","optionOne","votes","includes","authedUser","optionTwo","console","log","state","handleUnanswerdClicked","event","map","mapStateToProps","users","Object","keys"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Question from './Question'\r\n\r\nclass Dashboard extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    console.log('questions',questions)\r\n    this.state = {\r\n        questionsToShow: this.props.questionsIds.filter(id => this.props.questions[id].optionOne.votes.includes(this.props.authedUser) || this.props.questions[id].optionTwo.votes.includes(this.props.authedUser)),\r\n    };\r\n  }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        console.log('questionsToShow', this.state.questionsToShow)\r\n    }\r\n\r\n    handleAnswerdClicked = function () {\r\n        const questions = this.props.questions\r\n        this.setState(function () {\r\n            return {\r\n                questionsToShow: this.props.questionsIds.filter(id => questions[id].optionOne.votes.includes(this.props.authedUser) || questions[id].optionTwo.votes.includes(this.props.authedUser))\r\n            }\r\n        })\r\n        console.log('authedUser', this.props.authedUser)\r\n        console.log('questionsToShow', this.state.questionsToShow)\r\n    }\r\n\r\n    handleUnanswerdClicked = function () {\r\n        const questions = this.props.questions\r\n        this.setState(function () {\r\n            return {\r\n                questionsToShow: this.props.questionsIds.filter(id => !this.state.questionsToShow.includes(id))\r\n            }\r\n        })\r\n        console.log('authedUser', this.props.authedUser)\r\n        console.log('questionsToShow', this.state.questionsToShow)\r\n    }\r\n\r\n    render() {\r\n        const { authedUser, questionsIds } = this.props;\r\n        console.log(this.props)\r\n\r\n        return (\r\n            <div>\r\n                <h3 className='center'>Your Timeline</h3>\r\n                <div className='center'>\r\n                    <button\r\n                        onClick={(event) => this.handleUnanswerdClicked(false)}>\r\n                        Unanswerd questions\r\n                    </button>\r\n                    <button\r\n                        onClick={(event) => this.handleAnswerdClicked(false)}>\r\n                        Answerd questions\r\n                    </button>\r\n                </div>\r\n\r\n                <ul className='dashboard-list'>\r\n                    {this.state.questionsToShow.map((id) => (\r\n                        <li key={id}>\r\n                            <Question id={id} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }) {\r\n    return {\r\n        questionsIds: Object.keys(questions),\r\n        questions,\r\n        authedUser: 'johndoe',\r\n        users,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}