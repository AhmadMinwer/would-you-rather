{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showAnswered: true\n    };\n\n    _this.handleAnswerdClicked = function () {\n      this.setState(function () {\n        return {\n          showAnswered: true\n        };\n      });\n    };\n\n    _this.handleUnanswerdClicked = function () {\n      this.setState(function () {\n        return {\n          showAnswered: false\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          authedUser = _this$props.authedUser,\n          questionsIds = _this$props.questionsIds;\n      console.log('props', this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Your Timeline\"), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(event) {\n          return _this2.handleUnanswerdClicked();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Unanswerd questions\"), React.createElement(\"button\", {\n        onClick: function onClick(event) {\n          return _this2.handleAnswerdClicked();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Answerd questions\")), React.createElement(\"ul\", {\n        className: \"dashboard-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.questionsToShow.map(function (id) {\n        return React.createElement(\"li\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Question, {\n          id: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  authedUser = 'johndoe';\n  var questionsIds = Object.keys(questions);\n  var answerdQuestions = questionsIds.filter(function (id) {\n    return questions[id].optionOne.votes.includes(authedUser) || questions[id].optionTwo.votes.includes(authedUser);\n  });\n  var unanswerdQuestions = questionsIds.filter(function (id) {\n    return !answerdQuestions.includes(id);\n  });\n  return {\n    questionsIds: questionsIds,\n    questions: questions,\n    authedUser: 'johndoe',\n    users: users,\n    answerdQuestions: answerdQuestions,\n    unanswerdQuestions: unanswerdQuestions\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","state","showAnswered","handleAnswerdClicked","setState","handleUnanswerdClicked","props","authedUser","questionsIds","console","log","event","questionsToShow","map","id","mapStateToProps","questions","users","Object","keys","answerdQuestions","filter","optionOne","votes","includes","optionTwo","unanswerdQuestions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE;AADV,K;;UAIRC,oB,GAAuB,YAAY;AAC/B,WAAKC,QAAL,CAAc,YAAY;AACtB,eAAO;AACHF,UAAAA,YAAY,EAAE;AADX,SAAP;AAGH,OAJD;AAKH,K;;UAEDG,sB,GAAyB,YAAY;AACjC,WAAKD,QAAL,CAAc,YAAY;AACtB,eAAO;AACHF,UAAAA,YAAY,EAAE;AADX,SAAP;AAGH,OAJD;AAKH,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACgC,KAAKI,KADrC;AAAA,UACGC,UADH,eACGA,UADH;AAAA,UACeC,YADf,eACeA,YADf;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKJ,KAAzB;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAE,iBAACK,KAAD;AAAA,iBAAW,MAAI,CAACN,sBAAL,EAAX;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAKI;AACI,QAAA,OAAO,EAAE,iBAACM,KAAD;AAAA,iBAAW,MAAI,CAACR,oBAAL,EAAX;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALJ,CAFJ,EAaI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWW,eAAX,CAA2BC,GAA3B,CAA+B,UAACC,EAAD;AAAA,eAC5B;AAAI,UAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAEA,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAD4B;AAAA,OAA/B,CADL,CAbJ,CADJ;AAuBH;;;;EAhDmBjB,S;;AAmDxB,SAASkB,eAAT,OAA2D;AAAA,MAAhCR,UAAgC,QAAhCA,UAAgC;AAAA,MAApBS,SAAoB,QAApBA,SAAoB;AAAA,MAATC,KAAS,QAATA,KAAS;AACvDV,EAAAA,UAAU,GAAG,SAAb;AACA,MAAMC,YAAY,GAAEU,MAAM,CAACC,IAAP,CAAYH,SAAZ,CAApB;AACA,MAAMI,gBAAgB,GAAGZ,YAAY,CAACa,MAAb,CAAoB,UAAAP,EAAE;AAAA,WAAIE,SAAS,CAACF,EAAD,CAAT,CAAcQ,SAAd,CAAwBC,KAAxB,CAA8BC,QAA9B,CAAuCjB,UAAvC,KAAsDS,SAAS,CAACF,EAAD,CAAT,CAAcW,SAAd,CAAwBF,KAAxB,CAA8BC,QAA9B,CAAuCjB,UAAvC,CAA1D;AAAA,GAAtB,CAAzB;AACA,MAAMmB,kBAAkB,GAAGlB,YAAY,CAACa,MAAb,CAAoB,UAAAP,EAAE;AAAA,WAAI,CAACM,gBAAgB,CAACI,QAAjB,CAA0BV,EAA1B,CAAL;AAAA,GAAtB,CAA3B;AAEA,SAAO;AACHN,IAAAA,YAAY,EAAZA,YADG;AAEHQ,IAAAA,SAAS,EAATA,SAFG;AAGHT,IAAAA,UAAU,EAAE,SAHT;AAIHU,IAAAA,KAAK,EAALA,KAJG;AAKHG,IAAAA,gBAAgB,EAAhBA,gBALG;AAMHM,IAAAA,kBAAkB,EAAlBA;AANG,GAAP;AAQH;;AAED,eAAe5B,OAAO,CAACiB,eAAD,CAAP,CAAyBf,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Question from './Question'\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        showAnswered: true,\r\n    }\r\n\r\n    handleAnswerdClicked = function () {\r\n        this.setState(function () {\r\n            return {\r\n                showAnswered: true\r\n            }\r\n        })\r\n    }\r\n\r\n    handleUnanswerdClicked = function () {\r\n        this.setState(function () {\r\n            return {\r\n                showAnswered: false\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { authedUser, questionsIds } = this.props;\r\n        console.log('props',this.props)\r\n\r\n        return (\r\n            <div>\r\n                <h3 className='center'>Your Timeline</h3>\r\n                <div className='center'>\r\n                    <button\r\n                        onClick={(event) => this.handleUnanswerdClicked()}>\r\n                        Unanswerd questions\r\n                    </button>\r\n                    <button\r\n                        onClick={(event) => this.handleAnswerdClicked()}>\r\n                        Answerd questions\r\n                    </button>\r\n                </div>\r\n\r\n                <ul className='dashboard-list'>\r\n                    {this.state.questionsToShow.map((id) => (\r\n                        <li key={id}>\r\n                            <Question id={id} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }) {\r\n    authedUser = 'johndoe' \r\n    const questionsIds= Object.keys(questions) \r\n    const answerdQuestions = questionsIds.filter(id => questions[id].optionOne.votes.includes(authedUser) || questions[id].optionTwo.votes.includes(authedUser))\r\n    const unanswerdQuestions = questionsIds.filter(id => !answerdQuestions.includes(id))\r\n\r\n    return {\r\n        questionsIds,\r\n        questions,\r\n        authedUser: 'johndoe',\r\n        users,\r\n        answerdQuestions,\r\n        unanswerdQuestions,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}