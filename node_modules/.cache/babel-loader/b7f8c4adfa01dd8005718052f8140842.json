{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\QuestionPage.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction QuestionPage(props) {\n  var _this$props = this.props,\n      id = _this$props.id,\n      questions = _this$props.questions;\n  var question = questions[id];\n  var users = this.props.users;\n\n  if (question == null) {\n    return React.createElement(Redirect, {\n      from: \"*\",\n      to: \"/not-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png',\n    alt: \"Avatar of \".concat(users[question.author].name),\n    className: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"question-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, users[question.author].name)), React.createElement(\"span\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Would You Rather...\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"asnwerOption\",\n    value: \"optionOne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, question.optionOne.text), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"asnwerOption\",\n    value: \"optionTwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"contactChoice2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, question.optionTwo.text), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"submit my answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"-\", question.optionOne.text), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"-\", question.optionTwo.text))));\n}\n\nfunction mapStateToProps(_ref, props) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  var id = props.match.params.id;\n  return {\n    users: users,\n    id: id,\n    questions: questions,\n    authedUser: authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\QuestionPage.js"],"names":["React","Redirect","connect","QuestionPage","props","id","questions","question","users","author","avatarURL","name","optionOne","text","optionTwo","mapStateToProps","authedUser","match","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBACD,KAAKA,KADJ;AAAA,MACnBC,EADmB,eACnBA,EADmB;AAAA,MACfC,SADe,eACfA,SADe;AAE3B,MAAMC,QAAQ,GAAGD,SAAS,CAACD,EAAD,CAA1B;AACA,MAAMG,KAAK,GAAG,KAAKJ,KAAL,CAAWI,KAAzB;;AAGA,MAAGD,QAAQ,IAAI,IAAf,EAAqB;AACnB,WAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,GAAf;AAAmB,MAAA,EAAE,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,GAAG,EAAEC,KAAK,CAACD,QAAQ,CAACE,MAAV,CAAL,CAAuBC,SAAvB,GAAmCF,KAAK,CAACD,QAAQ,CAACE,MAAV,CAAL,CAAuBC,SAA1D,GAAsE,wDAD7E;AAEE,IAAA,GAAG,sBAAeF,KAAK,CAACD,QAAQ,CAACE,MAAV,CAAL,CAAuBE,IAAtC,CAFL;AAGE,IAAA,SAAS,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAK,CAACD,QAAQ,CAACE,MAAV,CAAL,CAAuBE,IAA9B,CADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AACE,IAAA,IAAI,EAAC,cADP;AACsB,IAAA,KAAK,EAAC,WAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,QAAQ,CAACK,SAAT,CAAmBC,IAA3B,CAHF,EAG0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH1C,EAIE;AAAO,IAAA,IAAI,EAAC,OAAZ;AACE,IAAA,IAAI,EAAC,cADP;AACsB,IAAA,KAAK,EAAC,WAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AAAO,IAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BN,QAAQ,CAACO,SAAT,CAAmBD,IAAhD,CANF,EAM+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN/D,CADF,EASE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CALF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKN,QAAQ,CAACK,SAAT,CAAmBC,IAAxB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKN,QAAQ,CAACO,SAAT,CAAmBD,IAAxB,CAFF,CAjBF,CANA,CADF;AA+BD;;AAED,SAASE,eAAT,OAA2DX,KAA3D,EAAkE;AAAA,MAAvCY,UAAuC,QAAvCA,UAAuC;AAAA,MAA3BV,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBE,KAAgB,QAAhBA,KAAgB;AAAA,MACxDH,EADwD,GACjDD,KAAK,CAACa,KAAN,CAAYC,MADqC,CACxDb,EADwD;AAGhE,SAAO;AACHG,IAAAA,KAAK,EAALA,KADG;AAEHH,IAAAA,EAAE,EAAFA,EAFG;AAGHC,IAAAA,SAAS,EAATA,SAHG;AAIHU,IAAAA,UAAU,EAAVA;AAJG,GAAP;AAMD;;AAED,eAAed,OAAO,CAACa,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction QuestionPage(props) {\r\n  const { id, questions } = this.props;\r\n  const question = questions[id];\r\n  const users = this.props.users\r\n\r\n\r\n  if(question == null) {\r\n    return <Redirect from='*' to='/not-found' />\r\n  }\r\n\r\n  return (\r\n    <div className=\"question\">\r\n    <img\r\n      src={users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png' }\r\n      alt={`Avatar of ${users[question.author].name}`}\r\n      className='avatar'\r\n    />\r\n    <div className='question-info'>\r\n      <div>\r\n        <span>{users[question.author].name}</span>\r\n      </div>\r\n      <span className='center'>Would You Rather...</span>\r\n      <form>\r\n        <div>\r\n          <input type=\"radio\"\r\n            name=\"asnwerOption\" value=\"optionOne\" />\r\n          <label>{question.optionOne.text}</label><br />\r\n          <input type=\"radio\"\r\n            name=\"asnwerOption\" value=\"optionTwo\" />\r\n          <label for=\"contactChoice2\">{question.optionTwo.text}</label><br />\r\n        </div>\r\n        <input type='submit' value='submit my answer' />\r\n      </form>\r\n      \r\n      <div>\r\n        <p>-{question.optionOne.text}</p>\r\n        <p>-{question.optionTwo.text}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n  const { id } = props.match.params;\r\n  \r\n  return {\r\n      users,\r\n      id,\r\n      questions,\r\n      authedUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage);\r\n"]},"metadata":{},"sourceType":"module"}