{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\React nanodegree\\\\React & Redux\\\\react-and-redux-final-project\\\\src\\\\components\\\\QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { formatQuestion } from '../utils/_DATA';\nimport { handleAnswerQuestion } from '../actions/questions';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\n\nvar QuestionPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionPage, _Component);\n\n  function QuestionPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuestionPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuestionPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.isAnswered = function () {\n      var _this$props = this.props,\n          authedUser = _this$props.authedUser,\n          questions = _this$props.questions,\n          question = _this$props.question,\n          users = _this$props.users;\n      var questionId = this.props.id;\n      var authedUserObject = users[authedUser]; // const id = this.props.match.params['id']\n      // const question = questions[id]\n\n      return Object.keys(authedUserObject.answers).filter(function (id) {\n        return id === questionId;\n      });\n    };\n\n    _this.handleAnswer = function (value) {\n      console.log('value', value); // const { dispatch, question, authedUser } = this.props\n      // dispatch(handleAnswerQuestion({\n      //     id: question.id,\n      //     answer: value,\n      //     authedUser\n      // }))\n    };\n\n    return _this;\n  }\n\n  _createClass(QuestionPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          questions = _this$props2.questions,\n          question = _this$props2.question,\n          users = _this$props2.users,\n          authedUser = _this$props2.authedUser,\n          id = _this$props2.id; // const id = this.props.match.params['id']\n      // const question = questions[id]\n      // const users = this.props.users\n\n      var authedUserObject = users[authedUser];\n      console.log('authedUserObject', authedUserObject.answers[id]);\n      return React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png',\n        alt: \"Avatar of \".concat(users[question.author].name),\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, users[question.author].name)), React.createElement(\"span\", {\n        className: \"center m-b-25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Would You Rather...\"), this.isAnswered().length <= 0 ? React.createElement(RadioGroup, {\n        onChange: this.handleAnswer,\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(RadioButton, {\n        value: \"optionOne\",\n        className: \"radio-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, question.optionOne.text), React.createElement(RadioButton, {\n        value: \"optionTwo\",\n        className: \"radio-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, question.optionTwo.text)) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, authedUserObject.answers[id] === 'optionOne' ? React.createElement(\"p\", {\n        className: \"bg-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, question.optionOne.text) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, question.optionOne.text), authedUserObject.answers[id] === 'optionTwo' ? React.createElement(\"p\", {\n        className: \"bg-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, question.optionTwo.text) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, question.optionTwo.text))));\n    }\n  }]);\n\n  return QuestionPage;\n}(Component);\n\nfunction mapStateToProps(_ref, props) {\n  var authedUser = _ref.authedUser,\n      questions = _ref.questions,\n      users = _ref.users;\n  var id = props.match.params['id'];\n  var question = questions[id];\n  question['optionOneText'] = question.optionOne.text;\n  question['optionTwoText'] = question.optionTwo.text;\n  authedUser = 'johndoe';\n  return {\n    id: id,\n    users: users,\n    questions: questions,\n    authedUser: authedUser,\n    question: question ? formatQuestion(question) : null\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["D:\\Udacity\\React nanodegree\\React & Redux\\react-and-redux-final-project\\src\\components\\QuestionPage.js"],"names":["React","Component","Redirect","connect","formatQuestion","handleAnswerQuestion","RadioGroup","RadioButton","QuestionPage","isAnswered","props","authedUser","questions","question","users","questionId","id","authedUserObject","Object","keys","answers","filter","handleAnswer","value","console","log","author","avatarURL","name","length","optionOne","text","optionTwo","mapStateToProps","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { formatQuestion } from '../utils/_DATA'\r\nimport { handleAnswerQuestion } from '../actions/questions'\r\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\r\n\r\n\r\n\r\n\r\nclass QuestionPage extends Component {\r\n\r\n    isAnswered = function () {\r\n        const { authedUser, questions, question, users } = this.props\r\n        const questionId = this.props.id\r\n        const authedUserObject = users[authedUser]\r\n        // const id = this.props.match.params['id']\r\n        // const question = questions[id]\r\n\r\n        return Object.keys(authedUserObject.answers).filter(id => id === questionId)\r\n\r\n    }\r\n\r\n    handleAnswer = (value) => {\r\n       \r\n        console.log('value',value)\r\n\r\n        // const { dispatch, question, authedUser } = this.props\r\n\r\n        // dispatch(handleAnswerQuestion({\r\n        //     id: question.id,\r\n        //     answer: value,\r\n        //     authedUser\r\n        // }))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { questions, question, users, authedUser, id } = this.props;\r\n        // const id = this.props.match.params['id']\r\n        // const question = questions[id]\r\n        // const users = this.props.users\r\n        const authedUserObject = users[authedUser]\r\n\r\n        console.log('authedUserObject', authedUserObject.answers[id])\r\n\r\n        return (\r\n            <div className=\"question\">\r\n                <img\r\n                    src={users[question.author].avatarURL ? users[question.author].avatarURL : 'https://oshinon.com/wp-content/uploads/2018/12/man.png'}\r\n                    alt={`Avatar of ${users[question.author].name}`}\r\n                    className='avatar'\r\n                />\r\n                <div className='question-info'>\r\n                    <div>\r\n                        <span>{users[question.author].name}</span>\r\n                    </div>\r\n                    <span className='center m-b-25'>Would You Rather...</span>\r\n                    {this.isAnswered().length <= 0 ?\r\n                        <RadioGroup onChange={this.handleAnswer} vertical>\r\n                            <RadioButton value='optionOne' className='radio-btn'>\r\n                                {question.optionOne.text}\r\n                            </RadioButton>\r\n                            <RadioButton value=\"optionTwo\" className='radio-btn'>\r\n                                {question.optionTwo.text}\r\n                            </RadioButton>\r\n                        </RadioGroup>\r\n                        : <div>\r\n                            {authedUserObject.answers[id] === 'optionOne' ? <p className='bg-green'>{question.optionOne.text}</p> : <p>{question.optionOne.text}</p>}\r\n                            {authedUserObject.answers[id] === 'optionTwo' ? <p className='bg-green'>{question.optionTwo.text}</p> : <p>{question.optionTwo.text}</p>}\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n\r\n    const id = props.match.params['id']\r\n    const question = questions[id]\r\n    question['optionOneText'] = question.optionOne.text\r\n    question['optionTwoText'] = question.optionTwo.text\r\n    authedUser = 'johndoe'\r\n\r\n\r\n    return {\r\n        id,\r\n        users,\r\n        questions,\r\n        authedUser,\r\n        question: question\r\n            ? formatQuestion(question)\r\n            : null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage);\r\n"]},"metadata":{},"sourceType":"module"}